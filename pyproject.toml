[tool.poetry]
name = "rbo"
version = "3.0.0"
description = "Python Developer Blog"
authors = ["ryanleonbutler <ryanleonbutler@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.8"
Django = "3.2.12"
django-environ = "^0.8.1"
boto3 = "^1.21.27"
Markdown = "^3.3.6"
django-markdownx = "^3.0.1"
gunicorn = "^20.1.0"

[tool.poetry.dev-dependencies]
black = "^22.1.0"
flake8 = "^4.0.1"
isort = "^5.10.1"
tox = "^3.24.5"
pytest = "^7.1.1"
pytest-cov = "^3.0.0"
coverage = "^6.3.2"

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist =
    py{310,39,38}-django{32},
    flake8,
    tests

[testenv]
deps =
    poetry>=1.1.0
    django32: Django==3.2.8
whitelist_externals =
    poetry
    bash
skip_install = true
commands_pre =
    poetry install -vvv
    bash -c 'poetry export --dev --without-hashes -f requirements.txt | grep -v "^[dD]jango==" > .requirements.txt'

[testenv:flake8]
commands =
    poetry run flake8 blog/ resume/ rbo_django/ tests/

[testenv:tests]
commands =
    poetry run pytest -ra -v --cov=blog --cov=resume --cov=rbo_django --cov-report xml .
"""

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
omit = ["blog/migrations/*", "resume/migrations/*"]

[tool.black]
line-length = 119
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
known_first_party = "rbo_django"
known_third_party = ["pytest"]
known_django = "django"
sections = ["FUTURE","STDLIB","DJANGO","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
profile = "black"
multi_line_output = 3
lines_after_imports = 2

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
